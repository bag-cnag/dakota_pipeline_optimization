# Demonstrate Dakota script interface to Python analysis (Rosenbrock
environment
   tabular_data
    tabular_data_file = 'opt.dat'
method,						
	coliny_ea
	  population_size = 10
	  max_function_evaluations = 200
	  max_iterations = 20
	  seed = 11011011
	fitness_type merit_function
		mutation_type offset_normal
		mutation_rate 1.0
		crossover_type two_point
		crossover_rate 0.0
		replacement_type chc = 10
variables,					        

	discrete_design_range = 2
          initial_point = 7 28
   	  lower_bounds    1 12
	  upper_bounds    8 64
	  descriptor  'cpu' 'memory'
interface,							
	fork							
	  analysis_drivers = 'spark_jenkins.py'

##	  analysis_drivers = 'python.exe rosenbrock_bb_di.py'
	parameters_file = 'params.in'
	results_file = 'results.out'
#	file_tag
#	file_save
#	aprepro
responses,				
	num_objective_functions = 1	
	no_gradients		
	no_hessians


